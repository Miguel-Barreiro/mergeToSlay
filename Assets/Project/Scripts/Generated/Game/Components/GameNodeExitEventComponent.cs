//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MergeToStay.Components.Path.NodeExitEvent nodeExitEvent { get { return (MergeToStay.Components.Path.NodeExitEvent)GetComponent(GameComponentsLookup.NodeExitEvent); } }
    public bool hasNodeExitEvent { get { return HasComponent(GameComponentsLookup.NodeExitEvent); } }

    public void AddNodeExitEvent(bool newIsCompleted) {
        var index = GameComponentsLookup.NodeExitEvent;
        var component = (MergeToStay.Components.Path.NodeExitEvent)CreateComponent(index, typeof(MergeToStay.Components.Path.NodeExitEvent));
        component.IsCompleted = newIsCompleted;
        AddComponent(index, component);
    }

    public void ReplaceNodeExitEvent(bool newIsCompleted) {
        var index = GameComponentsLookup.NodeExitEvent;
        var component = (MergeToStay.Components.Path.NodeExitEvent)CreateComponent(index, typeof(MergeToStay.Components.Path.NodeExitEvent));
        component.IsCompleted = newIsCompleted;
        ReplaceComponent(index, component);
    }

    public void RemoveNodeExitEvent() {
        RemoveComponent(GameComponentsLookup.NodeExitEvent);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherNodeExitEvent;

    public static Entitas.IMatcher<GameEntity> NodeExitEvent {
        get {
            if (_matcherNodeExitEvent == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.NodeExitEvent);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherNodeExitEvent = matcher;
            }

            return _matcherNodeExitEvent;
        }
    }
}
